#!/bin/bash

# Copyright 2013 blackchip.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

PROG=$(basename "$0")
VERSION="2.0.0"

usage() {
    cat <<EOF
Usage: $PROG [options] command...

Options:
    -b, --banner         Show banner before running each step
    -c, --command        Show command to be exected in each step
    -d, --debug          Set x flag after arguments have been processed
    -f, --from STEP      Start exection of command at STEP
    -h, --help           Prints this usage
    -l, --list           List available steps
    -o, --only STEP      Only run STEP in command
    -s, --skip STEP      Run command and skip STEP. This option can be
                         specified multiple times to skip additional steps
    -t, --to STEP        Run command and stop at STEP
    -v, --verbose        Same as specifying --banner and --command
    --version            Prints the version of this command

Notes:
    If no options are specified, all steps in command are executed.
EOF
}

export __RUN_SHORT_OPTS="bcdf:hlo:s:t:v"
export __RUN_LONG_OPTS="banner,command,debug,from:,help,list,only:,skip:,to:,verbose,version"

ARGS=$(getopt -o "$__RUN_SHORT_OPTS" -l "$__RUN_LONG_OPTS" -n "$PROG" -- $@ )

if [ $? -ne 0 ] ; then
    exit 1
fi

__RUN_ARGS=""
eval set -- "$@"

while true; do
    case "$1" in
	--from|-f|--only|-o|--skip|-s|--to|-t)
	    __RUN_ARGS="$__RUN_ARGS $1 $2"
	    shift 2
	    ;;
	--banner|-b|--command|-c|--list|-l|-d|--debug|--verbose|-v)
	    __RUN_ARGS="$__RUN_ARGS $1"
	    shift
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	--version)
	    echo "$PROG version $VERSION"
	    exit 0
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $# -eq 0 ] ; then
    usage
    exit 1
fi

__RUN_ARGS="$__RUN_ARGS" "$@"


	    
	    
	
