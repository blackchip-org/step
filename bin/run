#!/bin/bash

# Copyright 2013 blackchip.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

PROG=$(basename "$0")
VERSION="2.0.0"

usage() {
    cat <<EOF
Usage: $PROG [options] <script> [arguments...]

Options:
  -a, --after STEP       Start execution of script after STEP.
  -b, --before STEP      Execute steps from the beginning of the script and 
                         stop before STEP.
  -d, --debug            For each step, print out the command before 
                         execution.
  -f, --from STEP        Start execution of script at STEP.
  -h, --help             Prints this usage.
  -i, --include PATH     Include steps along PATH that are not normally 
                         followed.
  -l, --list             List available steps.
  -o, --only STEP        Skip all steps except for STEP. Can be specified
                         multiple times to select a set of steps to run.
  -s, --skip {STEP,PATH} Execute and skip STEP or do not follow steps in
                         PATH. This option can be specified multiple times to
                         skip additional steps
  -t, --to STEP          Run command and stop at STEP
  -v, --verbose          Print out banners before each step.
  --version              Prints the version of this package.

Notes:
    If no options are specified, all steps in the script are executed.
EOF
}

export __RUN_SHORT_OPTS="a:b:df:hi:lo:s:t:v"
export __RUN_LONG_OPTS="after:,before:,debug,from:,help,include:,list,only:,skip:,to:,verbose,version"

ARGS=$(getopt -o "$__RUN_SHORT_OPTS" -l "$__RUN_LONG_OPTS" -n "$PROG" -- $@ )

if [ $? -ne 0 ] ; then
    exit 1
fi

__RUN_ARGS=""
eval set -- "$@"

while true; do
    case "$1" in
	--after|-a|--before|-b|--from|-f|--only|-o|--skip|-s|--to|-t)
	    __RUN_ARGS="$__RUN_ARGS $1 $2"
	    shift 2
	    ;;
	--debug|-d|-l|--list|-v|--verbose)
	    __RUN_ARGS="$__RUN_ARGS $1"
	    shift
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	--version)
	    echo "$PROG version $VERSION"
	    exit 0
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $# -eq 0 ] ; then
    usage
    exit 1
fi

__RUN_ARGS="$__RUN_ARGS" "$@"


	    
	    
	
