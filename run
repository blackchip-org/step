#!/bin/bash

# Copyright (c) 2013 - 2014 blackchip.org
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

PROG=$(basename "$0")
VERSION="3.1.0"

usage() {
    cat <<EOF
Usage: $PROG [options] <script> [arguments...]

Options:
  -a, --after STEP       Start execution of script after STEP.
  -b, --before STEP      Run from the beginning of the script and stop 
                         before STEP.
  -d, --debug            For each step, print out the command before 
                         execution. If the step is a function, turn the x 
                         flag on to print out the execution of each command.
  -f, --from STEP        Start execution of script at STEP.
  -h, --help             Prints this usage.
  -l, --list             List available steps.
  -o, --only STEP        Skip all steps except for STEP. 
  -s, --skip STEP        Execute script and skip STEP. Can be specified 
                         multiple times to select a set of steps to skip.
  -t, --to STEP          Run script and stop after executing STEP.
  -v, --verbose          Print out banners before each step.
  --version              Prints the version of this package.

Notes:
    If no options are specified, all steps in the script are executed.
EOF
}

export __RUN_SHORT_OPTS="a:b:df:hi:lo:s:t:v"
export __RUN_LONG_OPTS="after:,before:,debug,from:,help,include:,list,only:,skip:,to:,verbose,version"

ARGS=$(getopt -o "$__RUN_SHORT_OPTS" -l "$__RUN_LONG_OPTS" -n "$PROG" -- $@ )

if [ $? -ne 0 ] ; then
    exit 1
fi

__RUN_ARGS=""
eval set -- "$@"

while true; do
    case "$1" in
	--after|-a|--before|-b|--from|-f|--only|-o|--skip|-s|--to|-t)
	    __RUN_ARGS="$__RUN_ARGS $1 $2"
	    shift 2
	    ;;
	--debug|-d|-l|--list|-v|--verbose)
	    __RUN_ARGS="$__RUN_ARGS $1"
	    shift
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	--version)
	    echo "$PROG version $VERSION"
	    exit 0
	    ;;
	--)
	    shift
	    break
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ $# -eq 0 ] ; then
    usage
    exit 1
fi

__RUN_ARGS="$__RUN_ARGS" "$@"


	    
	    
	
